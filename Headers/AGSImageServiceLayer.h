/*
 COPYRIGHT 2010 ESRI
 
 TRADE SECRETS: ESRI PROPRIETARY AND CONFIDENTIAL
 Unpublished material - all rights reserved under the
 Copyright Laws of the United States and applicable international
 laws, treaties, and conventions.
 
 For additional information, contact:
 Environmental Systems Research Institute, Inc.
 Attn: Contracts and Legal Services Department
 380 New York Street
 Redlands, California, 92373
 USA
 
 email: contracts@esri.com
 */

#import <Foundation/Foundation.h>
@class AGSLayer;
@class AGSDynamicLayer;
@class AGSImageServiceInfo;
@class AGSCredential;
@class AGSMosaicRule;
@class AGSRasterFunction;

#pragma mark -

/** Supported interpolations.
 @since 1.8
 */
typedef enum {
	AGSInterpolationBilinear = 0,		/*!<  */
	AGSInterpolationCubicConvolution,	/*!<  */
	AGSInterpolationMajority,			/*!<  */
	AGSInterpolationNearestNeighbor		/*!<  */
} AGSInterpolation;

/** @file AGSImageServiceLayer.h */ //Required for Globals API doc

/** @brief A layer based on an ArcGIS Server image service.
 
 An instance of this class allows you to display maps from an image service of 
 ArcGIS Server. For example: <a href="http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/World/MODIS/ImageServer">http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/World/MODIS/ImageServer</a>.
 
 In a Model-View-Controller architecture, this object represents the Model. The 
 corresponding View object, @c AGSDynamicLayerView,  is created when this layer 
 is added to the map.
 
 @define{AGSImageServiceLayer.h,ArcGIS}
 @since 1.0
 */
@interface AGSImageServiceLayer : AGSDynamicLayer <AGSCoding, AGSSecuredResource> {
 @private
	NSURL *_URL;
	AGSImageServiceInfo *_imageServiceInfo;
	NSUInteger _compressionQuality; 
	NSArray *_bandIds;
	
	AGSImageFormat _format;
	AGSInterpolation _interpolation;
	AGSMosaicRule *_mosaicRule;
	AGSRasterFunction *_renderingRule;
	NSUInteger _noData;
	
	AGSCredential *_credential;
	NSOperation *_loadOperation;
}


/** URL of the image service resource in the ArcGIS Server REST Services Directory.
 @since 1.0
 */
@property (nonatomic, retain, readonly) NSURL *URL;

/** Information about the image service.
 @since 1.0
 */
@property (nonatomic, retain, readonly) AGSImageServiceInfo *imageServiceInfo;

/** The compression quality of maps generated by the image service. The value can
 be between 0 - 100. Compression only applies to lossy image formats such as JPEG (JPG).
 @li A value of 0 means maximum compression (lowest quality)
 @li A value of 100 means minimum compression (highest quality)
 
 @since 1.0
 */
@property (nonatomic, assign, readwrite) NSUInteger compressionQuality;

/** The IDs of bands which are to be included in the map image. The band IDs are numbered from 0 to
 the @c AGSImageServiceInfo @p bandCount property - 1. You can request for
 the image to contain 1 band, in which case it will be a gray scale image, or 3 bands for color images. 
 @since 1.0
 */
@property (nonatomic, retain, readwrite) NSArray *bandIds;

/** The credential to be used to access secured resources.
 @since 1.0
 */
@property (nonatomic, copy, readonly) AGSCredential *credential;

/** Specifies the rendering rule for how the requested map image should be rendered. 
 Rendering rules allows you to perform complex processing, such as computing hillshade or slope, on raster data of an Image Service.
 The source data is not changed. Instead, processing is performed on-the-fly while generating map images. 
 
 Refer to the REST API <a href="http://help.arcgis.com/en/arcgisserver/10.0/apis/rest/index.html?israsterfunctions.html">
 documentation</a> for more information about supported 
 raster functions.
 @since 1.8
 */
@property (nonatomic, retain, readwrite) AGSRasterFunction *renderingRule;

/** The pixel value that represents no information.
 @since 1.8
 */
@property (nonatomic, assign) NSUInteger noData;

/** Map image format. If no format is specified the format is set to the server
 default which is png8.
 @since 1.8
 */
@property (nonatomic, assign, readwrite) AGSImageFormat format;

/** Current interpolation method. Interpolation techniques specify how to 
 approximate pixel values for map images based on pixel values of the raster data.
 In simpler terms, interpolation is the process by which an image is resized or resampled.
 @since 1.8
 */
@property (nonatomic, assign, readwrite) AGSInterpolation interpolation;

/** Specifies the mosaic rule. Image Services based on mosaic datasets may contain many overlapping rasters.
 A mosaic rule defines the order in which rasters are combined together to create a
 map image.
 @since 1.8
 */
@property (nonatomic, retain, readwrite) AGSMosaicRule *mosaicRule;

/** Flag indicating if the layer renders at the native resolution. 
 This property will not have any affect iOS devices without a retina display. If using an iOS
 device with a retina display and you want to take advantage of that display you can set
 this value to YES. The property must be set before the layer loads.
 
 When rendering at the native resolution, this layer will use more network bandwidth and memory (because the map images will be bigger).
 @since 2.1
 */
@property (nonatomic, assign, readwrite) BOOL renderNativeResolution;

/** Initalize this layer with a URL to an ArcGIS Server image service.
 @param url URL pointing to an image service.
 @return A new, initialized, image serivce layer.
 @since 1.0
 */
-(id)initWithURL:(NSURL *)url;

/** A method to get an initalized and autoreleased layer using a URL to an
 ArcGIS Server image service.
 @param url URL pointing to an image service.
 @return A new, autoreleased, image service layer.
 @since 1.0
 */
+(id)imageServiceLayerWithURL: (NSURL*)url;

/** Initalize this layer with a credential and URL to an ArcGIS Server image service.
 @param url URL pointing to an image service.
 @param cred @c AGSCredential used to access secure service.
 @return A new, initialized, image serivce layer.
 @since 1.0
 */
-(id)initWithURL:(NSURL *)url credential:(AGSCredential*)cred;

/** A method to get an initalized and autoreleased layer using a credential and URL to an
 ArcGIS Server image service.
 @param url URL pointing to an image service.
 @param cred @c AGSCredential used to access secure service.
 @return A new, autoreleased, image service layer.
 @since 1.0
 */
+(id)imageServiceLayerWithURL: (NSURL*)url credential:(AGSCredential*)cred;

/** For completeness, this is to be used when you have a raw dictionary from
 the REST endpoint.
 @param json The JSON dictionary to initialize the layer.
 @param url URL to initialize the layer.
 @param cred @c AGSCredential used to access secure service.
 @return A new object.
 @since 2.0
 */
- (id)initWithJSON:(NSDictionary *)json URL:(NSURL*)url credential:(AGSCredential*)cred;

/** If the layer failed to load with a specific url and credential, you can resubmit it with a 
 new URL and credential. This function does nothing if the layer is already loaded. This function 
 also does nothing if the layer is currently trying to load.
 @param url URL pointing to an image service.
 @param cred @c AGSCredential used to access the secured resource.
 @since 1.0
 */
-(void)resubmitWithURL:(NSURL*)url credential:(AGSCredential*)cred;

@end
